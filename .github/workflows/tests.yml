name: CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tests:
    runs-on: ubuntu-latest
    # services:
    #   postgres:
    #     image: postgres
    #     env:
    #       POSTGRES_USER: dockeruser
    #       POSTGRES_PASSWORD: dockerpass
    #       POSTGRES_DB: transcendance
    #     # Set health checks to wait until postgres has started
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5
    #     ports:
    #       - 5432:5432

    steps:
    - uses: actions/checkout@v3

    # BACKEND Install and build
    - id: backend-node_modules-cache
      uses: actions/cache@v3
      with:
          path: src/backend/node_modules
          key: backend-node_modules-cache-${{ runner.os }}-${{ hashFiles('src/backend/package-lock.json') }}
    - name: Install node modules (dependencies)
      run: npm --prefix src/backend clean-install
      if: steps.backend-node_modules-cache.outputs.cache-hit != 'true'

    - name: Compile backend
      run: npm --prefix src/backend run build

    # FRONTEND Install and build
    - id: frontend-node_modules-cache
      uses: actions/cache@v3
      with:
          path: src/frontend/node_modules
          key: frontend-node_modules-cache-${{ runner.os }}-${{ hashFiles('src/frontend/package-lock.json') }}
    - name: Install node modules (frontend dependencies)
      run: npm --prefix src/frontend clean-install
      if: steps.frontend-node_modules-cache.outputs.cache-hit != 'true'

    - name: Compile backend
      run: npm --prefix src/frontend run build

    # TODO: Add cache to github actions
    - name: Build containers
      run: |
        sed -i '/^volumes/d' docker-compose.yml
        sed -i '/transcendence_.*modules/d' docker-compose.yml
        sed -i '/^RUN/d' src/backend/Dockerfile
        sed -i '/^RUN/d' src/frontend/Dockerfile
        docker-compose build

    - name: Start containers
      run: docker-compose up -d

    - name: Run tests with jest
      run: npm --prefix src/backend run test:ci
    
    - name: Stop containers
      if: always()
      run: docker-compose down
