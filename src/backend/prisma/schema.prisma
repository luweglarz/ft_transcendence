// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  username  String     @unique
  auth      Auth?
  avatar    Avatar?
  RoomUser  RoomUser[]
  Message   Message[]
  wins      Game[]     @relation("Winner")
  loses     Game[]     @relation("Loser")
}

model Auth {
  userId       Int      @id
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  email        String?  @unique
  password     String?
  authType     AuthType @default(LOCAL)
  refreshToken String?
}

model Avatar {
  userId   Int    @id
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  mimeType String
  image    Bytes
}

enum AuthType {
  LOCAL
  OAUTH42
}

enum Role {
  USER
  ADMIN
  OWNER
}

enum RoomType {
  PUBLIC
  PROTECTED
  PRIVATE
}

model RoomUser {
  roomUserId Int       @id @default(autoincrement())
  user       User      @relation(fields: [userId], references: [id])
  userId     Int
  room       Room      @relation(fields: [roomId], references: [id])
  roomId     Int
  role       Role
  isBanned   Boolean   @default(false)
  isMuted    Boolean   @default(false)
  timeOut    DateTime?
  socketId   String
}

model Message {
  id      Int    @id @default(autoincrement())
  room    Room   @relation(fields: [roomId], references: [id])
  roomId  Int
  user    User   @relation(fields: [userId], references: [id])
  userId  Int
  content String
}

model Room {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  name      String     @unique
  password  String?
  roomType  RoomType
  users     RoomUser[]
  messages  Message[]
}

model Game {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  winner      User     @relation("Winner", fields: [winnerId], references: [id])
  winnerId    Int
  winnerGoals Int
  loser       User     @relation("Loser", fields: [loserId], references: [id])
  loserId     Int
  loserGoals  Int
}
